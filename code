# Install necessary packages
!pip install tensorflow opencv-python matplotlib

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Import required libraries
import cv2
import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
from google.colab import files
import os

# Load trained model in Keras format
model_path = "/content/drive/MyDrive/sign_language_model.keras"
model = tf.keras.models.load_model(model_path)

# Define class labels (A-Z and 0-9)
class_names = sorted(os.listdir("/content/drive/MyDrive/Sign_Language_Dataset/asl_dataset"))

# Upload an image
uploaded = files.upload()

for filename in uploaded.keys():
    # Read the uploaded image
    img_path = filename
    img = cv2.imread(img_path)

    if img is not None:
        # Preprocess the image
        img_resized = cv2.resize(img, (64, 64))  # Resize to match model input
        img_resized = np.expand_dims(img_resized, axis=0) / 255.0  # Normalize & add batch dim

        # Predict the sign
        prediction = model.predict(img_resized)
        predicted_class = np.argmax(prediction)  # Get highest probability class
        predicted_label = class_names[predicted_class]  # Get corresponding label

        # Display the image with the predicted label
        plt.imshow(cv2.cvtColor(cv2.imread(img_path), cv2.COLOR_BGR2RGB))
        plt.axis('off')
        plt.title(f"Predicted: {predicted_label}")
        plt.show()

        print(f"✅ Predicted Sign: {predicted_label}")
    else:
        print("❌ Error: Unable to read the image.")
